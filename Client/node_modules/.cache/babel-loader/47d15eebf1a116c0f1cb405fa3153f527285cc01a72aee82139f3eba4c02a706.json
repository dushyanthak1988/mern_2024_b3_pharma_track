{"ast":null,"code":"var _jsxFileName = \"D:\\\\my\\\\MERNDEV\\\\mern_2024_b3_my_project\\\\Client\\\\src\\\\pages\\\\MedicineList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport * as api from '../services/ApiServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MedicineList() {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    const fetchMedicines = async () => {\n      try {\n        const {\n          data\n        } = await api.fetchMedicines();\n        setMedicines(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMedicines();\n  }, []);\n  const filteredMedicines = medicines.filter(medicine => medicine.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medicines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredMedicines.map(medicine => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [medicine.name, \" - \", medicine.quantity, \" - \", medicine.expiryDate, \" - \", medicine.price]\n      }, medicine._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(MedicineList, \"tY7J6mZoXvAqV5nv55oOtpcIURI=\");\n_c = MedicineList;\nexport default MedicineList;\nvar _c;\n$RefreshReg$(_c, \"MedicineList\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","MedicineList","_s","medicines","setMedicines","search","setSearch","fetchMedicines","data","error","console","filteredMedicines","filter","medicine","name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","quantity","expiryDate","price","_id","_c","$RefreshReg$"],"sources":["D:/my/MERNDEV/mern_2024_b3_my_project/Client/src/pages/MedicineList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as api from '../services/ApiServices';\r\n\r\nfunction MedicineList() {\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchMedicines = async () => {\r\n      try {\r\n        const { data } = await api.fetchMedicines();\r\n        setMedicines(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchMedicines();\r\n  }, []);\r\n\r\n  const filteredMedicines = medicines.filter(medicine =>\r\n    medicine.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Medicines</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      <ul>\r\n        {filteredMedicines.map((medicine) => (\r\n          <li key={medicine._id}>\r\n            {medicine.name} - {medicine.quantity} - {medicine.expiryDate} - {medicine.price}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MedicineList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,KAAKC,GAAG,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMV,GAAG,CAACS,cAAc,CAAC,CAAC;QAC3CH,YAAY,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDF,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAGR,SAAS,CAACS,MAAM,CAACC,QAAQ,IACjDA,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,MAAM,CAACU,WAAW,CAAC,CAAC,CAC3D,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBC,KAAK,EAAEnB,MAAO;MACdoB,QAAQ,EAAGC,CAAC,IAAKpB,SAAS,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFrB,OAAA;MAAAiB,QAAA,EACGN,iBAAiB,CAACiB,GAAG,CAAEf,QAAQ,iBAC9Bb,OAAA;QAAAiB,QAAA,GACGJ,QAAQ,CAACC,IAAI,EAAC,KAAG,EAACD,QAAQ,CAACgB,QAAQ,EAAC,KAAG,EAAChB,QAAQ,CAACiB,UAAU,EAAC,KAAG,EAACjB,QAAQ,CAACkB,KAAK;MAAA,GADxElB,QAAQ,CAACmB,GAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CAvCQD,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAyCrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}